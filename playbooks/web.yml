---
 - hosts: web
   remote_user: ubuntu
   become: true
   tasks:
    - name: install web components
      apt: name={{item}} state=present update_cache=yes
      with_items:
        - apache2
        - libapache2-mod-wsgi
        - python-pip
        - python-virtualenv
        - python-mysqldb

    - name: ensure that apache2 is running
      service: name=apache2 state=started enabled=yes

    - name: esure that mod-wsgi is enabled
      apache2_module: state=present name=wsgi
#Restarts the Apache2 service if changes are made. If No changes are made, the handler does not fire.
      notify: restart apache2

    - name: copy demo app source
      copy: src=/etc/ansible/demo/app/ dest=/var/www/demo mode=0755
      notify: restart apache2

#Copies demo folder to ansible destination. Contains cfg and python app.
    - name: copy apache virtual host config
      copy: src=/etc/ansible/demo/demo.conf dest=/etc/apache2/sites-available
      notify: restart apache2

    - name: setup python virtualenv
      pip: requirements=/var/www/demo/requirements.txt virtualenv=/var/www/demo/.venv/
      notify: restart apache2

#Removes symlink between 000-default and sites-enabled directory
    - name: de-activate default apache site
      file: path=/etc/apache2/sites-enabled/000-default.conf state=absent
      notify: restart apache2
#Creates symlink between new demo.conf file and sites-enabled directory
    - name: activate demo apache sites
      file: src=/etc/apache2/sites-available/demo.conf dest=/etc/apache2/sites-enabled/demo.conf state=link
      notify: restart apache2

#Only want handler to fire when changes are made. See 'notify'.
   handlers:
    - name: restart apache2
      service: name=apache2 state=restarted
